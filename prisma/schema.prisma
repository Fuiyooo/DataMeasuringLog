// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  OPERATOR
  ADMIN
  DEVELOPER
}

model User {
  id          Int      @id @default(autoincrement())
  id_employee String   @unique
  name        String?
  username    String   @unique
  password    String
  role        Role     @default(OPERATOR)
  createdAt   DateTime @default(now())
}

model MeasurementItem {
  id        Int      @id @default(autoincrement())
  id_item   String   @unique
  name      String
  type      String
  image     String
  createdAt DateTime @default(now())

  parameters Parameter[] // Relation to Parameter
  Item       Item[] // Relation to Item
}

model Parameter {
  id       Int    @id @default(autoincrement())
  id_item  String
  id_tool  Int
  unit     String
  minValue Float
  maxValue Float

  measurementItem MeasurementItem  @relation(fields: [id_item], references: [id_item], onUpdate: Cascade, onDelete: Cascade)
  parametersValue ParameterValue[]
  tools           Tools            @relation(fields: [id_tool], references: [id])
}

model Item {
  id          Int      @id @default(autoincrement())
  id_barcode  String
  name        String
  type        String
  image       String
  id_employee String
  createdAt   DateTime @default(now())

  measurementItem MeasurementItem  @relation(fields: [id_barcode], references: [id_item], onUpdate: Cascade, onDelete: Cascade)
  parametersValue ParameterValue[]
}

model ParameterValue {
  id           Int    @id @default(autoincrement())
  id_item      Int
  id_parameter Int
  value        Float
  status       String

  item       Item      @relation(fields: [id_item], references: [id], onUpdate: Cascade, onDelete: Cascade)
  parameters Parameter @relation(fields: [id_parameter], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

model Tools {
  id        Int         @id @default(autoincrement())
  name      String
  createdAt DateTime    @default(now())
  Parameter Parameter[]
}
